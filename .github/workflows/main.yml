name: Build and Publish

on:
  push:
    branches: main
  pull_request:

jobs:
  build:
    name: Build and create release
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      
      - name: Fetch API files
        run: |
          wget https://github.com/hk-modding/api/releases/latest/download/ModdingApiWin.zip -O API.zip
          unzip API.zip -d References

      - name: Fetch Unity Explorer files
        run: |
          wget https://github.com/sinai-dev/UnityExplorer/releases/latest/download/UnityExplorer.Standalone.Mono.zip -O UnityExplorer.zip
          unzip UnityExplorer.zip -d References

      - name: Fetch 0Harmony file
        run: |
          wget $(curl -s https://api.github.com/repos/pardeike/Harmony/releases/latest | grep browser_download_url | head -n 1 | cut -d '"' -f 4)
          unzip Harmony*.zip -d Harmony
          mv Harmony/net472/0Harmony.dll References/0Harmony.dll

      - name: Setup MSBuild
        uses: microsoft/setup-msbuild@v1

      - name: Setup NuGet
        uses: NuGet/setup-nuget@v1

      - name: Restore packages
        run: nuget restore .\UExplorer.csproj

      - name: Build project
        run: dotnet build --configuration Release

      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Upload release asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: Output/UExplorer/UExplorer.zip
          asset_name: UExplorer.zip
          asset_content_type: application/zip